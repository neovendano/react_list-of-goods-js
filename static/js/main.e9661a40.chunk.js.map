{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPHABET_SORT_KEY","LENGTH_SORT_KEY","App","useState","sortKey","setSortKey","isReversed","setIsReversed","isAppliedSort","renderedGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getGoodsToRender","className","type","cn","onClick","isReversedPrev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,WACpBC,EAAkB,SA0BjB,IAAMC,EAAM,WACjB,MAA8BC,mBA1BP,IA0BvB,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAgBF,GAAcF,EAC9BK,EA3BR,SAA0BC,EAAON,EAASE,GACxC,IAAMK,EAAa,YAAOD,GAE1B,GAAIN,EACF,OAAQA,GACN,KAAKJ,EACHW,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MACF,KAAKb,EACHU,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAWhE,OAJIV,GACFK,EAAcM,UAGTN,EAOeO,CAAiBnB,EAAiBK,EAASE,GAMjE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAYJ,IAE1BsB,QAAS,kBAAMjB,EAAWL,IAL5B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAYH,IAE1BqB,QAAS,kBAAMjB,EAAWJ,IAL5B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAA2B,IAAff,IAEdgB,QAAS,kBAAMf,GAAc,SAAAgB,GAAc,OAAKA,MALlD,uBAUGf,GACH,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA1Ca,WACnBjB,EA/BqB,IAgCrBE,GAAc,IAqCV,sBAUF,6BACGE,EAAce,KAAI,SAAAC,GAAI,OACrB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCnGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9661a40.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPHABET_SORT_KEY = 'alphabet';\nconst LENGTH_SORT_KEY = 'length';\nconst DEFAULT_SORT_KEY = '';\n\nfunction getGoodsToRender(goods, sortKey, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortKey) {\n    switch (sortKey) {\n      case ALPHABET_SORT_KEY:\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      case LENGTH_SORT_KEY:\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortKey, setSortKey] = useState(DEFAULT_SORT_KEY);\n  const [isReversed, setIsReversed] = useState(false);\n  const isAppliedSort = isReversed || sortKey;\n  const renderedGoods = getGoodsToRender(goodsFromServer, sortKey, isReversed);\n  const onClickReset = () => {\n    setSortKey(DEFAULT_SORT_KEY);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortKey !== ALPHABET_SORT_KEY,\n          })}\n          onClick={() => setSortKey(ALPHABET_SORT_KEY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortKey !== LENGTH_SORT_KEY,\n          })}\n          onClick={() => setSortKey(LENGTH_SORT_KEY)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isReversed !== true,\n          })}\n          onClick={() => setIsReversed(isReversedPrev => !isReversedPrev)}\n        >\n          Reverse\n        </button>\n\n        {!!isAppliedSort && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={onClickReset}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {renderedGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}